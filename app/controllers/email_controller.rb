=begin
diverst

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end
class EmailController < ApplicationController

  def email/count
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/create_change_stream_get_emails_change_stream
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/create_change_stream_post_emails_change_stream
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/delete_by_id
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/exists_get_emails{id}exists
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/exists_head_emails{id}
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/find
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/find_by_id
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/find_one
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/patch_or_create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/prototype/patch_attributes
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/replace_by_id_post_emails{id}replace
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/replace_by_id_put_emails{id}
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/replace_or_create_post_emails_replace_or_create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/replace_or_create_put_emails
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/update_all
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def email/upsert_with_where
    # Your code here

    render json: {"message" => "yes, it worked"}
  end
end
