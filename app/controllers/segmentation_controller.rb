=begin
diverst

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end
class SegmentationController < ApplicationController

  def segmentation/count
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/create_change_stream_get_segmentations_change_stream
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/create_change_stream_post_segmentations_change_stream
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/delete_by_id
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/exists_get_segmentations{id}exists
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/exists_head_segmentations{id}
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/find
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/find_by_id
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/find_one
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/patch_or_create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/prototype/patch_attributes
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/replace_by_id_post_segmentations{id}replace
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/replace_by_id_put_segmentations{id}
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/replace_or_create_post_segmentations_replace_or_create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/replace_or_create_put_segmentations
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/update_all
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segmentation/upsert_with_where
    # Your code here

    render json: {"message" => "yes, it worked"}
  end
end
