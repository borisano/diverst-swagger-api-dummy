=begin
diverst

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end
class NewsLinkCommentController < ApplicationController

  def news_link_comment/count
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/create_change_stream_get_news_link_comments_change_stream
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/create_change_stream_post_news_link_comments_change_stream
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/delete_by_id
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/exists_get_news_link_comments{id}exists
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/exists_head_news_link_comments{id}
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/find
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/find_by_id
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/find_one
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/patch_or_create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/prototype/patch_attributes
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/replace_by_id_post_news_link_comments{id}replace
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/replace_by_id_put_news_link_comments{id}
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/replace_or_create_post_news_link_comments_replace_or_create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/replace_or_create_put_news_link_comments
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/update_all
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def news_link_comment/upsert_with_where
    # Your code here

    render json: {"message" => "yes, it worked"}
  end
end
