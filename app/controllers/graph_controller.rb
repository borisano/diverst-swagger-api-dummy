=begin
diverst

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end
class GraphController < ApplicationController

  def graph/count
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/create_change_stream_get_graphs_change_stream
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/create_change_stream_post_graphs_change_stream
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/delete_by_id
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/exists_get_graphs{id}exists
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/exists_head_graphs{id}
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/find
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/find_by_id
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/find_one
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/patch_or_create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/prototype/patch_attributes
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/replace_by_id_post_graphs{id}replace
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/replace_by_id_put_graphs{id}
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/replace_or_create_post_graphs_replace_or_create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/replace_or_create_put_graphs
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/update_all
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def graph/upsert_with_where
    # Your code here

    render json: {"message" => "yes, it worked"}
  end
end
