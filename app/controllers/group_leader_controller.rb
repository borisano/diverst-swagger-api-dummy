=begin
diverst

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end
class GroupLeaderController < ApplicationController

  def group_leader/count
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/create_change_stream_get_group_leaders_change_stream
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/create_change_stream_post_group_leaders_change_stream
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/delete_by_id
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/exists_get_group_leaders{id}exists
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/exists_head_group_leaders{id}
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/find
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/find_by_id
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/find_one
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/patch_or_create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/prototype/patch_attributes
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/replace_by_id_post_group_leaders{id}replace
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/replace_by_id_put_group_leaders{id}
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/replace_or_create_post_group_leaders_replace_or_create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/replace_or_create_put_group_leaders
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/update_all
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def group_leader/upsert_with_where
    # Your code here

    render json: {"message" => "yes, it worked"}
  end
end
