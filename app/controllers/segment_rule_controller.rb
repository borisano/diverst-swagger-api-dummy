=begin
diverst

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end
class SegmentRuleController < ApplicationController

  def segment_rule/count
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/create_change_stream_get_segment_rules_change_stream
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/create_change_stream_post_segment_rules_change_stream
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/delete_by_id
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/exists_get_segment_rules{id}exists
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/exists_head_segment_rules{id}
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/find
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/find_by_id
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/find_one
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/patch_or_create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/prototype/patch_attributes
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/replace_by_id_post_segment_rules{id}replace
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/replace_by_id_put_segment_rules{id}
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/replace_or_create_post_segment_rules_replace_or_create
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/replace_or_create_put_segment_rules
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/update_all
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def segment_rule/upsert_with_where
    # Your code here

    render json: {"message" => "yes, it worked"}
  end
end
